#!/bin/bash
# Usage: svds-templatenb [-k kernel] [notebook-name-without-spaces]
# Will download the most up-to-date Template notebook named with:
# today's date, your initials, and [an optional phrase].
# $ svds-templatenb exploratory_data_analysis -k python2
# The example would yield a file named:
# 2016-08-17_jbw_exploratory_data_analysis.ipynb

# Also, this creates a cached file in ~/.Template-Python.ipynb
# This is the fallback file in case the connection isn't made within 10 seconds

function show_help() {
    echo "svds-templatenb [-k kernel, -t timeout] [notebook-name-without-spaces]"
    echo "  Will download the most up-to-date Template notebook named with:"
    echo "  today's date, your initials, and [an optional phrase]."
    echo "  The example would yield a file named: 2016-08-17_jbw_exploratory_data_analysis.ipynb"
}

# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.

# Initialize our own variables:
output_file=""
kernel=''
connectiontimeout=10

while getopts "h?kt:" opt; do
    case "$opt" in
    h|\?)
        show_help
        exit 0
        ;;
    k)  kernel=$OPTARG
        ;;
    t)  connectiontimeout=$OPTARG
        ;;
    esac
done

shift $((OPTIND-1))

output_file="$1"
# todo check if dsinitials is empty

if [ -z "${dsinitials}" ];
    then
    echo "Warning: bash variable \"dsinitials\" not set!"
    echo
    echo "      Add your initials automatically by adding"
    echo "          export dsinitials='jbw'"
    echo "      to  your .bashrc"
    echo
    echo
fi

fullname=`date +%Y-%m-%d`_${dsinitials}_${output_file}.ipynb

# Download file
status=$(curl -H 'Accept: application/vnd.github.v3.raw' -L \
    https://api.github.com/repos/jbwhit/svds-style/contents/notebooks/Template-Python.ipynb \
    -o ${fullname} --connect-timeout ${connectiontimeout} -s -w %{http_code} )

# This creates a cached backup file each time the newest is pulled.
if [ ${status} == 200 ];
then
    cp ${fullname} ~/.Template-Python.ipynb
else
    echo "Connection error of some type."
    echo "Attempting to use cached template."
    cp ~/.Template-Python.ipynb ${fullname}
fi

echo New notebook: ${fullname}

# If kernel is specified, replace the default kernel with new kernel.
if [[ -n "$kernel" ]];
    then echo "Changing kernel name: $kernel"
    sed -e 's/"name": "python3"/"name": \"'${kernel}'\"/g' ${fullname} > ${fullname}.tmp && mv ${fullname}.tmp ${fullname}
fi

exit 0
